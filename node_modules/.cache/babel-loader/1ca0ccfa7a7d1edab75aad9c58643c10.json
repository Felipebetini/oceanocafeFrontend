{"ast":null,"code":"const BASEAPI = \"http://localhost:3000/api\";\n\nconst apiFetchPost = async body => {\n  const res = await fetch(BASEAPI + endpoint, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n  return json;\n};\n\nconst apiFetchPut = async (endpoint, body) => {\n  const res = await fetch(BASEAPI + endpoint, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n  return json;\n};\n\nconst apiFetchDelete = async (endpoint, body) => {\n  const res = await fetch(BASEAPI + endpoint, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.localtion.href = `/client/${body.idclients}`;\n    return;\n  }\n\n  return json;\n}; // const apiFetchGet = async (endpoint, body = []) => {\n//   console.log(\"endpoint \" + endpoint);\n//   const res = await fetch(BASEAPI, {\n//     method: \"GET\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\",\n//     },\n//   });\n//   console.log(res);\n//   const json = await res.json();\n//   if (json.notallowed) {\n//     window.localtion.href = \"/\";\n//     return;\n//   }\n//   return json;\n// };\n// const ApiDesafio = {\n//     CadCliente: async (nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento) => {\n//         const json = await apiFetchPost(\n//             '/api/clients',\n//             { nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento }\n//         );\n//         return json;\n//     },\n// };\n// eslint-disable-next-line import/no-anonymous-default-export\n\n\nexport default {\n  getSerchId: async () => {\n    const res = await fetch(BASEAPI + \"/clients\");\n    const json = await res.json();\n    return json;\n  },\n  //#################Clientes###########################################################################\n  getClients: async () => {\n    const res = await fetch(BASEAPI + \"/clients\");\n    const json = await res.json();\n    return json;\n  },\n  CadCliente: async (nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento) => {\n    const json = await apiFetchPost(\"/clients\", {\n      nome,\n      tipodepessoa,\n      cpf_cnpj,\n      cep,\n      endereco,\n      bairro,\n      cidade,\n      estado,\n      pais,\n      numero,\n      complemento\n    });\n    return json;\n  },\n  PutCliente: async (idclients, nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento) => {\n    const json = await apiFetchPut(`/clients/${idclients}`, {\n      idclients,\n      nome,\n      tipodepessoa,\n      cpf_cnpj,\n      cep,\n      endereco,\n      bairro,\n      cidade,\n      estado,\n      pais,\n      numero,\n      complemento\n    });\n    return json;\n  },\n  DelCliente: async idclients => {\n    const json = await apiFetchDelete(`/clients/${idclients}`, {\n      idclients\n    });\n    return json;\n  },\n  //#############################################################################\n  //########################Propostas#############################################\n  getPropostas: async () => {\n    const res = await fetch(BASEAPI + \"/proposals\");\n    const json = await res.json();\n    return json;\n  },\n  CadPropostas: async (codigo, assunto, data, datavalidade, idclient) => {\n    const json = await apiFetchPost(\"/proposals\", {\n      codigo,\n      assunto,\n      data,\n      datavalidade,\n      idclient\n    });\n    return json;\n  },\n  PutPropostas: async (id, codigo, assunto, data, datavalidade, idclient) => {\n    const json = await apiFetchPut(`/proposals/${id}`, {\n      id,\n      codigo,\n      assunto,\n      data,\n      datavalidade,\n      idclient\n    });\n    return json;\n  },\n  DelPropostas: async id => {\n    const json = await apiFetchDelete(`/proposals/${id}`, {\n      id\n    });\n    return json;\n  },\n  //#############################################################################\n  //########################PRODUTOS#############################################\n  getProdutos: async () => {\n    const res = await fetch(BASEAPI + \"/produtos\");\n    const json = await res.json();\n    return json;\n  },\n  CadProdutos: async (id, nome, preco, quantidade) => {\n    console.log(\"api\", nome);\n    const json = await apiFetchPost(\"/produtos\", {\n      id,\n      nome,\n      preco,\n      quantidade\n    });\n    return json;\n  },\n  PutProdutos: async (id, nome, preco, quantidade) => {\n    const json = await apiFetchPut(`/produtos/${id}`, {\n      id,\n      nome,\n      preco,\n      quantidade\n    });\n    return json;\n  },\n  DelProdutos: async id => {\n    const json = await apiFetchDelete(`/${id}`, {\n      id\n    });\n    return json;\n  }\n};","map":{"version":3,"sources":["/home/avell/oceanocafeSA/src/Api.js"],"names":["BASEAPI","apiFetchPost","body","res","fetch","endpoint","method","headers","Accept","JSON","stringify","json","apiFetchPut","apiFetchDelete","notallowed","window","localtion","href","idclients","getSerchId","getClients","CadCliente","nome","tipodepessoa","cpf_cnpj","cep","endereco","bairro","cidade","estado","pais","numero","complemento","PutCliente","DelCliente","getPropostas","CadPropostas","codigo","assunto","data","datavalidade","idclient","PutPropostas","id","DelPropostas","getProdutos","CadProdutos","preco","quantidade","console","log","PutProdutos","DelProdutos"],"mappings":"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","sourcesContent":["const BASEAPI = \"http://localhost:3000/api\";\n\nconst apiFetchPost = async (body) => {\n  const res = await fetch(BASEAPI + endpoint, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n  const json = await res.json();\n\n  return json;\n};\nconst apiFetchPut = async (endpoint, body) => {\n  const res = await fetch(BASEAPI + endpoint, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n  const json = await res.json();\n\n  return json;\n};\n\nconst apiFetchDelete = async (endpoint, body) => {\n  const res = await fetch(BASEAPI + endpoint, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.localtion.href = `/client/${body.idclients}`;\n    return;\n  }\n  return json;\n};\n\n// const apiFetchGet = async (endpoint, body = []) => {\n//   console.log(\"endpoint \" + endpoint);\n//   const res = await fetch(BASEAPI, {\n//     method: \"GET\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\",\n//     },\n//   });\n//   console.log(res);\n//   const json = await res.json();\n//   if (json.notallowed) {\n//     window.localtion.href = \"/\";\n//     return;\n//   }\n//   return json;\n// };\n\n// const ApiDesafio = {\n\n//     CadCliente: async (nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento) => {\n//         const json = await apiFetchPost(\n//             '/api/clients',\n//             { nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento }\n//         );\n//         return json;\n//     },\n\n// };\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getSerchId: async () => {\n    const res = await fetch(BASEAPI + \"/clients\");\n    const json = await res.json();\n    return json;\n  },\n\n  //#################Clientes###########################################################################\n  getClients: async () => {\n    const res = await fetch(BASEAPI + \"/clients\");\n    const json = await res.json();\n    return json;\n  },\n  CadCliente: async (\n    nome,\n    tipodepessoa,\n    cpf_cnpj,\n    cep,\n    endereco,\n    bairro,\n    cidade,\n    estado,\n    pais,\n    numero,\n    complemento\n  ) => {\n    const json = await apiFetchPost(\"/clients\", {\n      nome,\n      tipodepessoa,\n      cpf_cnpj,\n      cep,\n      endereco,\n      bairro,\n      cidade,\n      estado,\n      pais,\n      numero,\n      complemento,\n    });\n    return json;\n  },\n\n  PutCliente: async (\n    idclients,\n    nome,\n    tipodepessoa,\n    cpf_cnpj,\n    cep,\n    endereco,\n    bairro,\n    cidade,\n    estado,\n    pais,\n    numero,\n    complemento\n  ) => {\n    const json = await apiFetchPut(`/clients/${idclients}`, {\n      idclients,\n      nome,\n      tipodepessoa,\n      cpf_cnpj,\n      cep,\n      endereco,\n      bairro,\n      cidade,\n      estado,\n      pais,\n      numero,\n      complemento,\n    });\n    return json;\n  },\n\n  DelCliente: async (idclients) => {\n    const json = await apiFetchDelete(`/clients/${idclients}`, { idclients });\n    return json;\n  },\n  //#############################################################################\n\n  //########################Propostas#############################################\n\n  getPropostas: async () => {\n    const res = await fetch(BASEAPI + \"/proposals\");\n    const json = await res.json();\n    return json;\n  },\n  CadPropostas: async (codigo, assunto, data, datavalidade, idclient) => {\n    const json = await apiFetchPost(\"/proposals\", {\n      codigo,\n      assunto,\n      data,\n      datavalidade,\n      idclient,\n    });\n    return json;\n  },\n\n  PutPropostas: async (id, codigo, assunto, data, datavalidade, idclient) => {\n    const json = await apiFetchPut(`/proposals/${id}`, {\n      id,\n      codigo,\n      assunto,\n      data,\n      datavalidade,\n      idclient,\n    });\n    return json;\n  },\n\n  DelPropostas: async (id) => {\n    const json = await apiFetchDelete(`/proposals/${id}`, { id });\n    return json;\n  },\n\n  //#############################################################################\n\n  //########################PRODUTOS#############################################\n\n  getProdutos: async () => {\n    const res = await fetch(BASEAPI + \"/produtos\");\n    const json = await res.json();\n    return json;\n  },\n\n  CadProdutos: async (id, nome, preco, quantidade) => {\n    console.log(\"api\", nome);\n    const json = await apiFetchPost(\"/produtos\", {\n      id,\n      nome,\n      preco,\n      quantidade,\n    });\n    return json;\n  },\n\n  PutProdutos: async (id, nome, preco, quantidade) => {\n    const json = await apiFetchPut(`/produtos/${id}`, {\n      id,\n      nome,\n      preco,\n      quantidade,\n    });\n    return json;\n  },\n\n  DelProdutos: async (id) => {\n    const json = await apiFetchDelete(`/${id}`, { id });\n    return json;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}