{"ast":null,"code":"import qs from 'qs';\nconst BASEAPI = 'http://localhost:3000/api';\n\nconst apiFetchPost = async (endpoint, body) => {\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n  return json;\n};\n\nconst apiFetchPut = async (endpoint, body) => {\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n  return json;\n};\n\nconst apiFetchDelete = async (endpoint, body) => {\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.localtion.href = `/client/${body.idclients}`;\n    return;\n  }\n\n  return json;\n}; // const apiFetchGet = async (endpoint, body = []) => {\n//     console.log('endpoint ' + endpoint)\n//     const res = await fetch(BASEAPI+'/api/clients',{\n//         method: 'GET',\n//         headers: {\n//             'Accept': 'application/json',\n//             'Content-Type': 'application/json'\n//         }\n//     })\n//     console.log(res)\n//     const json = await res.json();\n//     if (json.notallowed) {\n//         window.localtion.href = '/';\n//         return;\n//     }\n//     return json;\n// }\n// const ApiDesafio = {\n//     CadCliente: async (nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento) => {\n//         const json = await apiFetchPost(\n//             '/api/clients',\n//             { nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento }\n//         );\n//         return json;\n//     },\n// };\n\n\nexport default {\n  getSerchId: async () => {\n    const res = await fetch(BASEAPI + '/clients');\n    const json = await res.json();\n    return json;\n  },\n  //#################Clientes###########################################################################\n  getClients: async () => {\n    const res = await fetch(BASEAPI + '/clients');\n    const json = await res.json();\n    return json;\n  },\n  CadCliente: async (nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento) => {\n    const json = await apiFetchPost('/clients', {\n      nome,\n      tipodepessoa,\n      cpf_cnpj,\n      cep,\n      endereco,\n      bairro,\n      cidade,\n      estado,\n      pais,\n      numero,\n      complemento\n    });\n    return json;\n  },\n  PutCliente: async (idclients, nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento) => {\n    const json = await apiFetchPut(`/clients/${idclients}`, {\n      idclients,\n      nome,\n      tipodepessoa,\n      cpf_cnpj,\n      cep,\n      endereco,\n      bairro,\n      cidade,\n      estado,\n      pais,\n      numero,\n      complemento\n    });\n    return json;\n  },\n  DelCliente: async idclients => {\n    const json = await apiFetchDelete(`/clients/${idclients}`, {\n      idclients\n    });\n    return json;\n  },\n  //#############################################################################\n  //########################Propostas#############################################\n  getPropostas: async () => {\n    const res = await fetch(BASEAPI + '/proposals');\n    const json = await res.json();\n    return json;\n  },\n  CadPropostas: async (codigo, assunto, data, datavalidade, idclient) => {\n    const json = await apiFetchPost('/proposals', {\n      codigo,\n      assunto,\n      data,\n      datavalidade,\n      idclient\n    });\n    return json;\n  },\n  PutPropostas: async (id, codigo, assunto, data, datavalidade, idclient) => {\n    const json = await apiFetchPut(`/proposals/${id}`, {\n      id,\n      codigo,\n      assunto,\n      data,\n      datavalidade,\n      idclient\n    });\n    return json;\n  },\n  DelPropostas: async id => {\n    const json = await apiFetchDelete(`/proposals/${id}`, {\n      id\n    });\n    return json;\n  },\n  //#############################################################################\n  //########################PRODUTOS#############################################\n  getProdutos: async () => {\n    const res = await fetch(BASEAPI + '/productsandservice');\n    const json = await res.json();\n    return json;\n  },\n  CadProdutos: async (descricao, descritivo, valorvenda, tipos, formacomercializacao) => {\n    const json = await apiFetchPost('/productsandservice', {\n      descricao,\n      descritivo,\n      valorvenda,\n      tipos,\n      formacomercializacao\n    });\n    return json;\n  },\n  PutProdutos: async (id, descricao, descritivo, valorvenda, tipos, formacomercializacao) => {\n    const json = await apiFetchPut(`/productsandservice/${id}`, {\n      id,\n      descricao,\n      descritivo,\n      valorvenda,\n      tipos,\n      formacomercializacao\n    });\n    return json;\n  },\n  DelProdutos: async id => {\n    const json = await apiFetchDelete(`/productsandservice/${id}`, {\n      id\n    });\n    return json;\n  }\n};","map":{"version":3,"sources":["/home/avell/oceanocafeSA/src/ApiDesafio.js"],"names":["qs","BASEAPI","apiFetchPost","endpoint","body","res","fetch","method","headers","JSON","stringify","json","apiFetchPut","apiFetchDelete","notallowed","window","localtion","href","idclients","getSerchId","getClients","CadCliente","nome","tipodepessoa","cpf_cnpj","cep","endereco","bairro","cidade","estado","pais","numero","complemento","PutCliente","DelCliente","getPropostas","CadPropostas","codigo","assunto","data","datavalidade","idclient","PutPropostas","id","DelPropostas","getProdutos","CadProdutos","descricao","descritivo","valorvenda","tipos","formacomercializacao","PutProdutos","DelProdutos"],"mappings":"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","sourcesContent":["import qs from 'qs';\n\nconst BASEAPI = 'http://localhost:3000/api';\n\n\nconst apiFetchPost = async (endpoint, body) => {\n    const res = await fetch(BASEAPI + endpoint, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    });\n    const json = await res.json();\n\n    return json;\n}\nconst apiFetchPut = async (endpoint, body) => {\n    const res = await fetch(BASEAPI + endpoint, {\n        method: 'PUT',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    });\n    const json = await res.json();\n\n    return json;\n}\n\nconst apiFetchDelete = async (endpoint, body) => {\n    const res = await fetch(BASEAPI + endpoint, {\n        method: 'DELETE',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    });\n    const json = await res.json();\n\n    if(json.notallowed) {\n        window.localtion.href = `/client/${body.idclients}`;\n        return;\n    }\n    return json;\n}\n\n// const apiFetchGet = async (endpoint, body = []) => {\n//     console.log('endpoint ' + endpoint)\n//     const res = await fetch(BASEAPI+'/api/clients',{\n//         method: 'GET',\n//         headers: {\n//             'Accept': 'application/json',\n//             'Content-Type': 'application/json'\n//         }\n//     })\n//     console.log(res)\n//     const json = await res.json();\n//     if (json.notallowed) {\n//         window.localtion.href = '/';\n//         return;\n//     }\n//     return json;\n// }\n\n\n// const ApiDesafio = {\n\n//     CadCliente: async (nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento) => {\n//         const json = await apiFetchPost(\n//             '/api/clients',\n//             { nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento }\n//         );\n//         return json;\n//     },\n\n\n// };\n\nexport default {\n\n    getSerchId : async () => {\n        const res = await fetch(BASEAPI+'/clients');\n        const json = await res.json();\n        return json;\n    },\n\n\n\n\n    //#################Clientes###########################################################################\n    getClients : async () => {\n        const res = await fetch(BASEAPI+'/clients');\n        const json = await res.json();\n        return json;\n    },\n    CadCliente:async ( nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento) => {\n        const json = await apiFetchPost(\n            '/clients',\n            {\n                nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento\n            }\n        );\n        return json;\n    },\n\n    PutCliente:async ( idclients, nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento) => {\n        const json = await apiFetchPut(\n            `/clients/${idclients}`,\n            {\n                idclients, nome, tipodepessoa, cpf_cnpj, cep, endereco, bairro, cidade, estado, pais, numero, complemento\n            }\n        );\n        return json;\n    },\n\n    DelCliente:async ( idclients) => {\n        const json = await apiFetchDelete(\n            `/clients/${idclients}`,\n            {idclients}\n        );\n        return json;\n    },\n    //#############################################################################\n\n    //########################Propostas#############################################\n\n\n    getPropostas : async () => {\n        const res = await fetch(BASEAPI+'/proposals');\n        const json = await res.json();\n        return json;\n    },\n    CadPropostas :async ( codigo, assunto, data, datavalidade, idclient) => {\n        const json = await apiFetchPost(\n            '/proposals',\n            {\n                codigo, assunto, data, datavalidade, idclient\n            }\n        );\n        return json;\n    },\n\n    PutPropostas :async ( id, codigo, assunto, data, datavalidade, idclient) => {\n        const json = await apiFetchPut(\n            `/proposals/${id}`,\n            {\n                id, codigo, assunto, data, datavalidade, idclient\n            }\n        );\n        return json;\n    },\n\n    DelPropostas :async ( id) => {\n        const json = await apiFetchDelete(\n            `/proposals/${id}`,\n            {id}\n        );\n        return json;\n    },\n\n     //#############################################################################\n\n    //########################PRODUTOS#############################################\n\n    getProdutos : async () => {\n        const res = await fetch(BASEAPI+'/productsandservice');\n        const json = await res.json();\n        return json;\n    },\n    CadProdutos :async ( descricao, descritivo, valorvenda, tipos, formacomercializacao) => {\n        const json = await apiFetchPost(\n            '/productsandservice',\n            {\n              descricao, descritivo, valorvenda, tipos, formacomercializacao\n            }\n        );\n        return json;\n    },\n\n    PutProdutos :async ( id, descricao, descritivo, valorvenda, tipos, formacomercializacao) => {\n        const json = await apiFetchPut(\n            `/productsandservice/${id}`,\n            {\n                id, descricao, descritivo, valorvenda, tipos, formacomercializacao\n            }\n        );\n        return json;\n    },\n\n    DelProdutos :async ( id) => {\n        const json = await apiFetchDelete(\n            `/productsandservice/${id}`,\n            {id}\n        );\n        return json;\n    },\n\n\n\n};"]},"metadata":{},"sourceType":"module"}